on:
  workflow_dispatch:
  push:
    branches: ['main']

jobs:
  hello:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: octo-sts/action@v1.0.0
      id: octo-sts
      with:
        scope: imjasonh/workflow-private
        identity: workflow-public
    - uses: imjasonh/workflow-public@main
    
    - name: Run private workflow
      if: never()
      env:
        GITHUB_TOKEN: ${{ steps.octo-sts.outputs.token }}
      run: |
        now=$(printf `date +"%Y-%m-%dT%H:%M:%S%:z"`)

        gh workflow run --repo imjasonh/workflow-private private.yaml --ref main

        # Okay, hold on.
        # The rest of this is weird because `gh run watch` doesn't support finely-scoped tokens for some indecipherable reason.
        # Also `gh workflow run` doesn't just output its run ID or URL, even via the API.
        # Also, runs are not returned by the list API immediately after creation...
        
        sleep 5
        url=$(gh run list --repo imjasonh/workflow-private -w private.yaml -e workflow_dispatch --created ">=${now}" --json url | jq -r '.[0].url')
        if [ "$url" = "null" ]; then
          echo "No run found"
          exit 1
        fi
        echo "Workflow link: ${url}"

        while true; do
          status=$(gh run list --repo imjasonh/workflow-private -w private.yaml -e workflow_dispatch --created ">=${now}" --json status | jq -r '.[0].status')
          echo "status: $status"
          if [ "$status" = "null" ]; then
            echo "Status not found"
            exit 1
          fi
          if [ "$status" = "completed" ]; then
            break
          fi
          sleep 5
        done
